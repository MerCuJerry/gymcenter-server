# .github/workflows/release.yml
name: Build
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: windows-latest
            target: x86_64-windows-msvc
          - name: ubuntu-latest
            target: x86_64-linux-gnu
    name: Build release ${{ matrix.os.target }}

    runs-on: ${{ matrix.os.name }}
    env:
      DATABASE_URL: mysql://root:${{ secrets.MYSQL_PASSWD }}@localhost:3306/fitness_mysql?characterEncoding=utf-8
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust with target ${{ matrix.os.target }}
        uses: moonrepo/setup-rust@v1
        with:
          cache: False
          cache-target: release
      - name: Setup Mysql
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "8.0"
          root-password: ${{ secrets.MYSQL_PASSWD }}
      - name: Execute .sql file
        run: |
          mysql -u root -p${{ secrets.MYSQL_PASSWD }} -e 'CREATE DATABASE fitness_mysql;'
          mysql -u root -p${{ secrets.MYSQL_PASSWD }} fitness_mysql -e 'source schema.sql'
      - name: Build Release (${{ matrix.os.target }})
        run: cargo build --release --out_dir ${{ matrix.os.target }}/
      - name: Move example file to output dir
        run: |
          mv .env.example ${{ matrix.os.target }}/.env
          mv rocket.toml.example ${{ matrix.os.target }}/rocket.toml
      - name: Upload binary files (${{ matrix.os.target }})
        uses: actions/upload-artifact@v4
        with:
          name: Gymcenter_${{ matrix.os.target }}
          path: |
            ${{ matrix.os.target }}/.env
            ${{ matrix.os.target }}/rocket.toml
            ${{ matrix.os.target }}/gymcenter-server*
